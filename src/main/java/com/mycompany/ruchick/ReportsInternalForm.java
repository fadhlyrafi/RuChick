/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package com.mycompany.ruchick;

import java.sql.Connection;
import java.sql.Date;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.time.LocalDate;
import java.time.YearMonth;
import java.util.HashMap;
import java.util.Map;
import java.util.TreeMap;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;


/**
 *
 * @author Muhamad Fadhly
 */
public class ReportsInternalForm extends javax.swing.JInternalFrame {

    /**
     * Creates new form MenuInternalForm
     */
    public ReportsInternalForm() {
        initComponents();
        setRowColors();
        this.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        BasicInternalFrameUI ui = (BasicInternalFrameUI) this.getUI();
        ui.setNorthPane(null);
        bacaReports();
        getTopSalesItem();
        displayTopSales();
        getMonthlyIncome();
        displayMonthlyIncome();
        getTotalIncome();
        displayTotalIncome();
        displayIncomeChart();
        getTotalCustomerToday();
        displayCustomerToday();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")


    private void bacaReports(){
    DefaultTableModel reportTbl = new DefaultTableModel(){
        @Override
        public boolean isCellEditable (int row, int column){
            return false;
        }
    };
    reportTbl.addColumn("Report ID");
    reportTbl.addColumn("Order Detail ID");
    reportTbl.addColumn("Item Name");
    reportTbl.addColumn("Price");
    reportTbl.addColumn("Date");

    try {
        String perintahSQL_tampilData = "SELECT report_id, order_detail_id, item_name, price, date FROM report";

        Connection penghubung_database = (Connection)koneksi_database.konfigurasi_database();

        Statement statementSQL = penghubung_database.createStatement();

        ResultSet hasilSQL = statementSQL.executeQuery(perintahSQL_tampilData);

        while (hasilSQL.next()) {
            reportTbl.addRow(new Object[]{
                hasilSQL.getInt("report_id"),
                hasilSQL.getInt("order_detail_id"),
                hasilSQL.getString("item_name"),
                hasilSQL.getBigDecimal("price"),
                hasilSQL.getDate("date")
            });

            tableReports.setModel(reportTbl);
        }

    } catch (Exception e) {
        e.printStackTrace();
        // Pesan Error kalau gagal
    }
}
    
        // Method untuk mengambil item_name paling populer
    public String getTopSalesItem() {
        String query = "SELECT item_name, COUNT(*) as count FROM report GROUP BY item_name ORDER BY count DESC LIMIT 1";
        String topItem = "";

        try (
        Connection penghubung_database = (Connection)koneksi_database.konfigurasi_database();

        Statement statementSQL = penghubung_database.createStatement();
        ResultSet rs = statementSQL.executeQuery(query)) {

            if (rs.next()) {
                topItem = rs.getString("item_name");
            }

        } catch (Exception e) {
            e.printStackTrace();
        }

        return topItem;
    }

    // Method untuk menampilkan item_name paling populer di JLabel
    public void displayTopSales() {
        String topSalesItem = getTopSalesItem();
        TopSales.setText( topSalesItem);
    }
    
        // Method untuk menghitung total income bulan ini
    public double getMonthlyIncome() {
        YearMonth currentMonth = YearMonth.now();
        LocalDate startDate = currentMonth.atDay(1);
        LocalDate endDate = currentMonth.atEndOfMonth();
        
        String query = "SELECT SUM(price) as total_income FROM report WHERE date BETWEEN ? AND ?";
        double totalIncome = 0.0;

        try (
                
        Connection penghubung_database = (Connection)koneksi_database.konfigurasi_database();

        Statement statementSQL = penghubung_database.createStatement();   
                
             PreparedStatement pstmt = penghubung_database.prepareStatement(query)) {

            pstmt.setDate(1, Date.valueOf(startDate));
            pstmt.setDate(2, Date.valueOf(endDate));
            ResultSet rs = pstmt.executeQuery();

            if (rs.next()) {
                totalIncome = rs.getDouble("total_income");
            }

        } catch (Exception e) {
            e.printStackTrace();
        }

        return totalIncome;
    }

    // Method untuk menampilkan total income bulan ini di JLabel
    public void displayMonthlyIncome() {
        double monthlyIncome = getMonthlyIncome();
        Income.setText("Rp " + monthlyIncome + "");
    }

    
        public double getTotalIncome() {
        String query = "SELECT SUM(price) as total_income FROM report";
        double totalIncome = 0.0;

        try (
            Connection penghubung_database = (Connection)koneksi_database.konfigurasi_database();
            Statement statementSQL = penghubung_database.createStatement(); 
            ResultSet rs = statementSQL.executeQuery(query)) {

            if (rs.next()) {
                totalIncome = rs.getDouble("total_income");
            }

        } catch (Exception e) {
            e.printStackTrace();
        }

        return totalIncome;
    }

    // Method untuk menampilkan total income di JLabel
    public void displayTotalIncome() {
        double totalIncome = getTotalIncome();
        TotalIncome.setText("Rp " + totalIncome + "");
    }
   
        // Method untuk mendapatkan data income per hari
       public Map<LocalDate, Double> getDailyIncome() {
        String query = "SELECT date, SUM(price) as daily_income FROM report GROUP BY date ORDER BY date";
        Map<LocalDate, Double> incomeData = new TreeMap<>();

        try (
            Connection penghubung_database = (Connection)koneksi_database.konfigurasi_database();
            Statement stmt = penghubung_database.createStatement();
            ResultSet rs = stmt.executeQuery(query)) {

            while (rs.next()) {
                LocalDate date = rs.getDate("date").toLocalDate();
                double dailyIncome = rs.getDouble("daily_income");
                incomeData.put(date, dailyIncome);
            }

        } catch (Exception e) {
            e.printStackTrace();
        }

        return incomeData;
    }
       
           // Method untuk memanggil fungsi total_customer_today dan mendapatkan hasilnya
    public int getTotalCustomerToday() {
        String query = "SELECT total_customer_today() AS total_customer_today";
        int totalCustomerToday = 0;

        try (
            Connection penghubung_database = (Connection)koneksi_database.konfigurasi_database();
            Statement stmt = penghubung_database.createStatement();
            ResultSet rs = stmt.executeQuery(query)) {

            if (rs.next()) {
                totalCustomerToday = rs.getInt("total_customer_today");
            }

        } catch (Exception e) {
            e.printStackTrace();
        }

        return totalCustomerToday;
    }

    // Method untuk menampilkan total customer hari ini di JLabel
    public void displayCustomerToday() {
        int totalCustomerToday = getTotalCustomerToday();
        customerToday.setText(String.valueOf(totalCustomerToday));
    }

    // Method untuk membuat line chart menggunakan JFreeChart
    public JFreeChart createLineChart(Map<LocalDate, Double> incomeData) {
        DefaultCategoryDataset dataset = new DefaultCategoryDataset();

        for (Map.Entry<LocalDate, Double> entry : incomeData.entrySet()) {
            dataset.addValue(entry.getValue(), "Income", entry.getKey());
        }

        return ChartFactory.createLineChart(
                "Daily Income Chart",
                "Date",
                "Income",
                dataset,
                PlotOrientation.VERTICAL,
                true,
                true,
                false
        );
    }

    // Method untuk menampilkan chart di JPanel
    public void displayIncomeChart() {
        Map<LocalDate, Double> incomeData = getDailyIncome();
        JFreeChart lineChart = createLineChart(incomeData);

        ChartPanel chartPanel = new ChartPanel(lineChart);
        chartPanel.setPreferredSize(new java.awt.Dimension(panelForChart.getWidth(), panelForChart.getHeight()));
        chartPanel.setMouseWheelEnabled(true);

        panelForChart.removeAll();
        panelForChart.setLayout(new java.awt.BorderLayout());
        panelForChart.add(chartPanel, java.awt.BorderLayout.CENTER);
        panelForChart.validate();
    }
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFormattedTextField1 = new javax.swing.JFormattedTextField();
        jProgressBar1 = new javax.swing.JProgressBar();
        jSlider1 = new javax.swing.JSlider();
        jOptionPane1 = new javax.swing.JOptionPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableReports = new javax.swing.JTable();
        jPanel13 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        TopSales = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        panelForChart = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        Income = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jPanel9 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        TotalIncome = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jPanel11 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        customerToday = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();

        jFormattedTextField1.setText("jFormattedTextField1");

        setPreferredSize(new java.awt.Dimension(886, 668));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jPanel2.setBackground(new java.awt.Color(0, 0, 102));
        jPanel2.setPreferredSize(new java.awt.Dimension(669, 475));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tableReports.setBackground(new java.awt.Color(204, 204, 204));
        tableReports.setForeground(new java.awt.Color(204, 204, 0));
        tableReports.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Report ID", "Order Detail ID", "Item Name", "Price", "Date"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.Double.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tableReports);

        jPanel2.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 706, 380));

        jPanel13.setBackground(new java.awt.Color(102, 153, 255));
        jPanel13.setPreferredSize(new java.awt.Dimension(225, 124));
        jPanel13.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/fast-food.png"))); // NOI18N
        jLabel14.setVerticalTextPosition(javax.swing.SwingConstants.TOP);
        jPanel13.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 78, -1, -1));

        TopSales.setBackground(new java.awt.Color(153, 153, 153));
        TopSales.setFont(new java.awt.Font("Segoe UI", 3, 18)); // NOI18N
        TopSales.setForeground(new java.awt.Color(255, 255, 255));
        TopSales.setPreferredSize(new java.awt.Dimension(56, 39));
        jPanel13.add(TopSales, new org.netbeans.lib.awtextra.AbsoluteConstraints(82, 78, 143, 64));

        jLabel16.setBackground(new java.awt.Color(153, 153, 153));
        jLabel16.setFont(new java.awt.Font("Segoe UI", 3, 24)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 255, 51));
        jLabel16.setText("Top Sales 1#");
        jLabel16.setMaximumSize(new java.awt.Dimension(181, 32));
        jLabel16.setMinimumSize(new java.awt.Dimension(181, 32));
        jLabel16.setPreferredSize(new java.awt.Dimension(56, 39));
        jPanel13.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 18, 213, 48));

        panelForChart.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(40, 40, 100));
        jLabel3.setText("Reports");

        jPanel8.setBackground(new java.awt.Color(102, 153, 255));
        jPanel8.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/money_1.png"))); // NOI18N
        jPanel8.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 84, -1, -1));

        Income.setBackground(new java.awt.Color(153, 153, 153));
        Income.setFont(new java.awt.Font("Segoe UI", 3, 22)); // NOI18N
        Income.setForeground(new java.awt.Color(255, 255, 255));
        Income.setPreferredSize(new java.awt.Dimension(56, 39));
        jPanel8.add(Income, new org.netbeans.lib.awtextra.AbsoluteConstraints(82, 84, 150, 60));

        jLabel6.setBackground(new java.awt.Color(153, 153, 153));
        jLabel6.setFont(new java.awt.Font("Segoe UI", 3, 24)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 51));
        jLabel6.setText("Monthly Income");
        jLabel6.setPreferredSize(new java.awt.Dimension(56, 39));
        jPanel8.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 18, 231, 48));

        jPanel9.setBackground(new java.awt.Color(102, 153, 255));
        jPanel9.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/revenue_1.png"))); // NOI18N
        jPanel9.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 78, -1, -1));

        TotalIncome.setBackground(new java.awt.Color(153, 153, 153));
        TotalIncome.setFont(new java.awt.Font("Segoe UI", 3, 22)); // NOI18N
        TotalIncome.setForeground(new java.awt.Color(255, 255, 255));
        TotalIncome.setPreferredSize(new java.awt.Dimension(56, 39));
        jPanel9.add(TotalIncome, new org.netbeans.lib.awtextra.AbsoluteConstraints(82, 78, 150, 70));

        jLabel7.setBackground(new java.awt.Color(153, 153, 153));
        jLabel7.setFont(new java.awt.Font("Segoe UI", 3, 24)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 51));
        jLabel7.setText("Total Income");
        jLabel7.setPreferredSize(new java.awt.Dimension(56, 39));
        jPanel9.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 18, 231, 48));

        jPanel11.setBackground(new java.awt.Color(102, 153, 255));
        jPanel11.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/rating.png"))); // NOI18N
        jPanel11.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 78, -1, -1));

        customerToday.setBackground(new java.awt.Color(153, 153, 153));
        customerToday.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        customerToday.setForeground(new java.awt.Color(255, 255, 255));
        customerToday.setPreferredSize(new java.awt.Dimension(56, 39));
        jPanel11.add(customerToday, new org.netbeans.lib.awtextra.AbsoluteConstraints(107, 78, 130, 70));

        jLabel11.setBackground(new java.awt.Color(153, 153, 153));
        jLabel11.setFont(new java.awt.Font("Segoe UI", 3, 24)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 51));
        jLabel11.setText("Customers Today");
        jLabel11.setPreferredSize(new java.awt.Dimension(56, 39));
        jPanel11.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 18, 231, 48));

        jLabel15.setBackground(new java.awt.Color(153, 153, 153));
        jLabel15.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(0, 0, 102));
        jLabel15.setText("Table Report");
        jLabel15.setMaximumSize(new java.awt.Dimension(181, 32));
        jLabel15.setMinimumSize(new java.awt.Dimension(181, 32));
        jLabel15.setPreferredSize(new java.awt.Dimension(56, 39));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 750, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(panelForChart, javax.swing.GroupLayout.PREFERRED_SIZE, 672, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(66, 66, 66)
                                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(586, 586, 586)
                                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(61, 61, 61)
                        .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(42, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 417, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(panelForChart, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(37, 37, 37))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

        private void setRowColors() {
         // Mendapatkan renderer sel default dari tabel
        DefaultTableCellRenderer defaultRenderer = (DefaultTableCellRenderer) tableReports.getDefaultRenderer(Object.class);

        // Mengatur renderer sel kustom untuk mengatur warna latar belakang baris bergantian
        tableReports.setDefaultRenderer(Object.class, new DefaultTableCellRenderer() {
            @Override
            public java.awt.Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
                final java.awt.Component c = defaultRenderer.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);

                // Mengatur warna latar belakang baris bergantian
                if (row % 2 == 0) {
                    c.setBackground(java.awt.Color.WHITE);
                } else {
                    c.setBackground(new java.awt.Color(173, 216, 230));
                }
                c.setForeground(java.awt.Color.BLACK);
                return c;
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Income;
    private javax.swing.JLabel TopSales;
    private javax.swing.JLabel TotalIncome;
    private javax.swing.JLabel customerToday;
    private javax.swing.JFormattedTextField jFormattedTextField1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JOptionPane jOptionPane1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSlider jSlider1;
    private javax.swing.JPanel panelForChart;
    private javax.swing.JTable tableReports;
    // End of variables declaration//GEN-END:variables
}
