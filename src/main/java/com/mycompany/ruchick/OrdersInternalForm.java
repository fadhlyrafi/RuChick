/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package com.mycompany.ruchick;

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JTable;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Muhamad Fadhly
 */
public class OrdersInternalForm extends javax.swing.JInternalFrame {

    /**
     * Creates new form OrdersInternalForm
     */
    public OrdersInternalForm() {
        initComponents();
        setRowColors();
        this.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        BasicInternalFrameUI ui = (BasicInternalFrameUI) this.getUI();
        ui.setNorthPane(null);
        bacaOrders();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    private void bacaOrders(){
        DefaultTableModel ordersTbl = new DefaultTableModel();
            ordersTbl.addColumn("Orders ID");
            ordersTbl.addColumn("Customer");
            ordersTbl.addColumn("Order Date");
            ordersTbl.addColumn("Total Pembelian");
            ordersTbl.addColumn("Dibayar");

        try {
            String perintahSQL_tampilData = "SELECT o.order_id, c.name, o.order_date, o.total_amount, o.paid "
                    + "FROM orders o JOIN customers c ON o.customer_id = c.customer_id";

            Connection penghubung_database = (Connection)koneksi_database.konfigurasi_database();

            Statement statementSQL = penghubung_database.createStatement();

            ResultSet hasilSQL = statementSQL.executeQuery(perintahSQL_tampilData);

//            int i = 1;
            while (hasilSQL.next()) {
                String status = hasilSQL.getString(5);
                String statusText;

                if ("1".equals(status)) {
                    statusText = "Sudah";
                } else if ("0".equals(status)) {
                    statusText = "Belum";
                } else {
                    statusText = "Tidak Diketahui"; // Ini untuk menangani kemungkinan nilai lain selain 1 atau 0
                }
                ordersTbl.addRow(new Object[]{
                    hasilSQL.getString(1),
                    hasilSQL.getString(2),
                    hasilSQL.getString(3),
                    hasilSQL.getString(4),
                    statusText
//                    hasilSQL.getString(5)
                });

                tabelOrders.setModel(ordersTbl);

            }

        } catch (Exception e) {
            // 07. Pesan Error kalau gagal
        }
    }
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelOrders = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabelOrderDetails = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(40, 40, 100));
        jLabel2.setText("Orders Management");

        tabelOrders.setBackground(new java.awt.Color(255, 255, 255));
        tabelOrders.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "order_id", "customer_id", "order_date", "total_amount", "paid"
            }
        ));
        tabelOrders.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelOrdersMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabelOrders);

        tabelOrderDetails.setBackground(new java.awt.Color(255, 255, 255));
        tabelOrderDetails.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "order_detail_id", "order_id", "menu_item_id", "quantityOrdered", "priceEach"
            }
        ));
        jScrollPane2.setViewportView(tabelOrderDetails);

        jLabel1.setText("jLabel1");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addGap(155, 155, 155)
                        .addComponent(jScrollPane2)
                        .addGap(31, 31, 31))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 357, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addContainerGap(220, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void setRowColors() {
         // Mendapatkan renderer sel default dari tabel
        DefaultTableCellRenderer defaultRenderer = (DefaultTableCellRenderer) tabelOrders.getDefaultRenderer(Object.class);

        // Mengatur renderer sel kustom untuk mengatur warna latar belakang baris bergantian
        tabelOrders.setDefaultRenderer(Object.class, new DefaultTableCellRenderer() {
            @Override
            public java.awt.Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
                final java.awt.Component c = defaultRenderer.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);

                // Mengatur warna latar belakang baris bergantian
                if (row % 2 == 0) {
                    c.setBackground(java.awt.Color.WHITE);
                } else {
                    c.setBackground(new java.awt.Color(173, 216, 230));
                }
                c.setForeground(java.awt.Color.BLACK);
                return c;
            }
        });
    }
    
    private void tabelOrdersMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelOrdersMouseClicked
            // TODO add your handling code here:
            DefaultTableModel detailsTbl = new DefaultTableModel();
            detailsTbl.addColumn("Detail Order ID");
            detailsTbl.addColumn("Order ID");
            detailsTbl.addColumn("Nama Menu");
            detailsTbl.addColumn("Jumlah");
            detailsTbl.addColumn("Harga");

        try {
            int baris = tabelOrders.rowAtPoint(evt.getPoint());
            int idOrder = Integer.parseInt(tabelOrders.getValueAt(baris, 0).toString());

            String perintahSQL_tampilDetails = "SELECT od.order_detail_id, od.order_id, m.name, od.quantityOrdered, od.priceEach "
                    + "FROM order_details od JOIN menu_items m ON od.menu_item_id = m.menu_item_id WHERE order_id="+idOrder+"";

            Connection penghubung_database = (Connection)koneksi_database.konfigurasi_database();

            Statement statementSQL = penghubung_database.createStatement();

            ResultSet hasilSQL = statementSQL.executeQuery(perintahSQL_tampilDetails);

//            int i = 1;
            while (hasilSQL.next()) {
                detailsTbl.addRow(new Object[]{
                    hasilSQL.getString(1),
                    idOrder,
                    hasilSQL.getString(3),
                    hasilSQL.getString(4),
                    hasilSQL.getString(5)
                });

                tabelOrderDetails.setModel(detailsTbl);

            }

        } catch (Exception e) {
            // 07. Pesan Error kalau gagal
        }    
    }//GEN-LAST:event_tabelOrdersMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tabelOrderDetails;
    private javax.swing.JTable tabelOrders;
    // End of variables declaration//GEN-END:variables
}
